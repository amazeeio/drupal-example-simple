version: '2.3'

x-volumes:
  &default-volumes
    # Define all volumes you would like to have real-time mounted into the docker containers
    volumes:
      - .:/app:delegated ### Local overrides to mount host filesystem. Automatically removed in CI and PROD.
      - files:/app/web/sites/default/files

x-environment:
  &default-environment
    # Route that should be used locally, if you are using pygmy, this route *must* end with .docker.amazee.io
    LAGOON_ROUTE: &default-url http://${COMPOSE_PROJECT_NAME:-drupal9-example-php8}.docker.amazee.io
    # Uncomment if you like to have the system behave like in production
    #LAGOON_ENVIRONMENT_TYPE: production
    # Uncomment to enable xdebug and then restart via `docker-compose up -d`
    #XDEBUG_ENABLE: "true"

x-user:
  &default-user
    # The default user under which the containers should run. Change this if you are on linux and run with another user than id `1000`
    user: '1000'

volumes:
  files:
    {}

services:

  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    build:
      context: .
      dockerfile: lagoon/cli.dockerfile
    image: &cli-image ${COMPOSE_PROJECT_NAME:-drupal9-example-php8}-cli # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    labels:
      # Lagoon Labels
      lagoon.type: cli-persistent
      lagoon.persistent.name: nginx # mount the persistent storage of nginx into this container
      lagoon.persistent: /app/web/sites/default/files/ # location where the persistent storage should be mounted
      lando.type: php-cli-drupal
    << : *default-volumes # loads the defined volumes from the top
    user: root
    volumes_from: ### mount the ssh-agent from the pygmy or cachalot ssh-agent. Automatically removed in CI.
      - container:amazeeio-ssh-agent ### Local overrides to mount host SSH keys. Automatically removed in CI.
    environment:
      << : *default-environment # loads the defined environment variables from the top

  nginx:
    build:
      context: .
      dockerfile: lagoon/nginx.dockerfile
      args:
        CLI_IMAGE: *cli-image # Inject the name of the cli image
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/web/sites/default/files/ # define where the persistent storage should be mounted too
      lando.type: nginx-drupal
    << : *default-volumes # loads the defined volumes from the top
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
      LAGOON_LOCALDEV_URL: *default-url
    networks:
      - amazeeio-network
      - default

  php:
    build:
      context: .
      dockerfile: lagoon/php.dockerfile
      args:
        CLI_IMAGE: *cli-image
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.name: nginx # we want this service be part of the nginx pod in Lagoon
      lagoon.persistent: /app/web/sites/default/files/ # define where the persistent storage should be mounted too
      lando.type: php-fpm
    << : *default-volumes # loads the defined volumes from the top
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top

  mariadb:
    image: uselagoon/mariadb-10.5-drupal:latest
    labels:
      lagoon.type: mariadb
      lando.type: mariadb-drupal
    ports:
      - "3306" # exposes the port 3306 with a random local port, find it with `docker-compose port mariadb 3306`
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment

networks:
  amazeeio-network:
    external: true
